package hellocucumber;
/**
 * @author bruel (taken from Design Pattern - Head First, O'Reilly, 09/2004)
 *
 */
public class BouilleurChocolat { 
	private boolean vide;
	private boolean bouilli; 
	private static BouilleurChocolat uniqueInstance = new BouilleurChocolat();
	
	protected BouilleurChocolat() {
		this.vide = true;
		this.bouilli = false;
	}
	
	// To be completed
	
	public String remplir() { 
		if (estVide()) { 
			vide = false;
			bouilli = false;
			// remplir le bouilleur du mélange lait/chocolat 
			return "Remplir"
		}
		else return "";
	}
	
	public void vider() {
		if (!estVide() && estBouilli()) { 
			// vider le mélange
			vide = true;
		}
	}
	
	public String bouillir() {
		if (!estVide() && !estBouilli()) {
			// porter le contenu à ébullition
			bouilli = true; 
			return "Bouillir";
		}
		else return "";
	}
	
	public boolean estVide() { return vide;}
	
	public boolean estBouilli() { return bouilli;}

	public static BouilleurChocolat getInstance() {
		return uniqueInstance;
	} 
}